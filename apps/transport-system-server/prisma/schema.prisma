datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Sacco {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String?
  updatedAt DateTime  @updatedAt
  vehicles  Vehicle[]
}

model Card {
  balance     Float?
  bank        String?
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  mPesaNumber String?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Vehicle {
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  numberPlate  String?
  sacco        Sacco?        @relation(fields: [saccoId], references: [id])
  saccoId      String?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model Offer {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Transaction {
  amount          Float?
  createdAt       DateTime  @default(now())
  id              String    @id @default(cuid())
  route           Route?    @relation(fields: [routeId], references: [id])
  routeId         String?
  transactionDate DateTime?
  updatedAt       DateTime  @updatedAt
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
  vehicle         Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId       String?
}

model Route {
  createdAt    DateTime      @default(now())
  fare         Float?
  id           String        @id @default(cuid())
  name         String?
  saccos       User[]
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model User {
  cards              Card[]
  createdAt          DateTime      @default(now())
  email              String?       @unique
  firstName          String?
  id                 String        @id @default(cuid())
  lastName           String?
  monthlyExpenditure Float?
  offers             Offer[]
  password           String
  phoneNumber        String?
  roles              Json
  route              Route?        @relation(fields: [routeId], references: [id])
  routeId            String?
  totalExpenditure   Float?
  transactions       Transaction[]
  updatedAt          DateTime      @updatedAt
  username           String        @unique
}
